ARM GAS  C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 436F6E6E 		.ascii	"Connect successful\000"
  22      65637420 
  22      73756363 
  22      65737366 
  22      756C00
  23              		.section	.text.main,"ax",%progbits
  24              		.align	1
  25              		.global	main
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	main:
  31              	.LFB3:
  32              		.file 1 "./Src/main.c"
   1:./Src/main.c  **** /**
   2:./Src/main.c  ****  ******************************************************************************
   3:./Src/main.c  ****  * @file    main.c
   4:./Src/main.c  ****  * @author  Kuan-Di Jiang
   5:./Src/main.c  ****  * @brief   This file is a example
   6:./Src/main.c  ****  ******************************************************************************
   7:./Src/main.c  ****  */
   8:./Src/main.c  **** 
   9:./Src/main.c  **** #include "myusart.h"
  10:./Src/main.c  **** #include <stdio.h>
  11:./Src/main.c  **** #include <stdint.h>
  12:./Src/main.c  **** 
  13:./Src/main.c  **** /* original setting
  14:./Src/main.c  **** uint32_t *pClkCtrlreg = (uint32_t)0x40021014U; // p clock control register
  15:./Src/main.c  **** uint32_t *pPortModeReg = (uint32_t)0x48000400U;
  16:./Src/main.c  **** uint32_t *pPortOutReg = (uint32_t)0x48000414U;
  17:./Src/main.c  **** */
  18:./Src/main.c  **** // using define to make code clean
  19:./Src/main.c  **** #define RCC_AHBENR *(volatile uint32_t *)(0x40021014U)	// AHB peripheral clock enable register, 0x4
  20:./Src/main.c  **** #define GPIOB_MODER *(volatile uint32_t *)(0x48000400U) // GPIOB base address + 0x00(offset)
  21:./Src/main.c  **** #define GPIOB_ODR *(volatile uint32_t *)(0x48000414U)	// GPIOB base address + 0x14(offset)
  22:./Src/main.c  **** 
ARM GAS  C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s 			page 2


  23:./Src/main.c  **** int main(void)
  24:./Src/main.c  **** {
  33              		.loc 1 24 1
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  25:./Src/main.c  **** 	MYUSART_Init();
  48              		.loc 1 25 2
  49 0006 FFF7FEFF 		bl	MYUSART_Init
  26:./Src/main.c  **** 	printf("Connect successful\n"); // needed slash n
  50              		.loc 1 26 2
  51 000a 1B48     		ldr	r0, .L7
  52 000c FFF7FEFF 		bl	puts
  27:./Src/main.c  **** 	/** Control LED
  28:./Src/main.c  **** 	 *	Address of the clock control register (AHB2)
  29:./Src/main.c  **** 	 *  0x40021000(RCC base address) + 0x14(offset)
  30:./Src/main.c  **** 	 *  = 0x40021014
  31:./Src/main.c  **** 	 *  Address of the GPIOB mode register (used to control mode)
  32:./Src/main.c  **** 	 *  0x48000400(GPIOB base address) + 0x00(offset)
  33:./Src/main.c  **** 	 *  0x48000400
  34:./Src/main.c  **** 	 *
  35:./Src/main.c  **** 	 * Address of the GPIOB output data register (used to write)
  36:./Src/main.c  **** 	 * 0x48000400(GPIOB base address) + 0x14(offset)
  37:./Src/main.c  **** 	 * 0x48000414
  38:./Src/main.c  **** 	 *
  39:./Src/main.c  **** 	 */
  40:./Src/main.c  **** 
  41:./Src/main.c  **** 	// select uint32_t because all peripheral register are of 32 bits.
  42:./Src/main.c  **** 
  43:./Src/main.c  **** 	// 1. enable the clock for GPIOB peripheral in the AHB2
  44:./Src/main.c  **** 	RCC_AHBENR |= (1 << 18); // means	0x00040000U, set IOPB EN to 1(datasheet)
  53              		.loc 1 44 13
  54 0010 1A4B     		ldr	r3, .L7+4
  55 0012 1B68     		ldr	r3, [r3]
  56 0014 194A     		ldr	r2, .L7+4
  57 0016 43F48023 		orr	r3, r3, #262144
  58 001a 1360     		str	r3, [r2]
  45:./Src/main.c  **** 
  46:./Src/main.c  **** 	// 2. configure the mode of the IO pin as output
  47:./Src/main.c  **** 	// The LED is on pin7 -> confirm 14th -> 1, 15th -> 0
  48:./Src/main.c  **** 	// a. clear the 14th and 15th bit positions (CLEAR)
  49:./Src/main.c  **** 	GPIOB_MODER &= (3 << 14); // means 0xFFFF3FFFU, set 14th and 15th to 0 (datasheet)
  59              		.loc 1 49 14
  60 001c 184B     		ldr	r3, .L7+8
  61 001e 1B68     		ldr	r3, [r3]
  62 0020 174A     		ldr	r2, .L7+8
ARM GAS  C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s 			page 3


  63 0022 03F44043 		and	r3, r3, #49152
  64 0026 1360     		str	r3, [r2]
  50:./Src/main.c  **** 							  // 3 means 11 in binary
  51:./Src/main.c  **** 							  // also can write ~(1 << 14) & ~(1 << 15)
  52:./Src/main.c  **** 	// b make 14th bit position as 1 (SET)
  53:./Src/main.c  **** 	GPIOB_MODER |= (1 << 14); // means 0x00004000U, set 14th to 1 (datasheet)
  65              		.loc 1 53 14
  66 0028 154B     		ldr	r3, .L7+8
  67 002a 1B68     		ldr	r3, [r3]
  68 002c 144A     		ldr	r2, .L7+8
  69 002e 43F48043 		orr	r3, r3, #16384
  70 0032 1360     		str	r3, [r2]
  71              	.L6:
  54:./Src/main.c  **** 
  55:./Src/main.c  **** 	while (1)
  56:./Src/main.c  **** 	{
  57:./Src/main.c  **** 		// 3. SET 7th bit of the output data register to make I/O pin-7 HIGH
  58:./Src/main.c  **** 		GPIOB_ODR |= (1 << 7); // means 0x0080
  72              		.loc 1 58 13
  73 0034 134B     		ldr	r3, .L7+12
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 124A     		ldr	r2, .L7+12
  76 003a 43F08003 		orr	r3, r3, #128
  77 003e 1360     		str	r3, [r2]
  78              	.LBB2:
  59:./Src/main.c  **** 
  60:./Src/main.c  **** 		for (int i = 0; i < 1000000; i++)
  79              		.loc 1 60 12
  80 0040 0023     		movs	r3, #0
  81 0042 7B60     		str	r3, [r7, #4]
  82              		.loc 1 60 3
  83 0044 02E0     		b	.L2
  84              	.L3:
  85              		.loc 1 60 33 discriminator 3
  86 0046 7B68     		ldr	r3, [r7, #4]
  87 0048 0133     		adds	r3, r3, #1
  88 004a 7B60     		str	r3, [r7, #4]
  89              	.L2:
  90              		.loc 1 60 3 discriminator 1
  91 004c 7B68     		ldr	r3, [r7, #4]
  92 004e 0E4A     		ldr	r2, .L7+16
  93 0050 9342     		cmp	r3, r2
  94 0052 F8DD     		ble	.L3
  95              	.LBE2:
  61:./Src/main.c  **** 			;
  62:./Src/main.c  **** 
  63:./Src/main.c  **** 		// Turn the Led off
  64:./Src/main.c  **** 		GPIOB_ODR &= ~(1 << 7); // set the postion to 0
  96              		.loc 1 64 13
  97 0054 0B4B     		ldr	r3, .L7+12
  98 0056 1B68     		ldr	r3, [r3]
  99 0058 0A4A     		ldr	r2, .L7+12
 100 005a 23F08003 		bic	r3, r3, #128
 101 005e 1360     		str	r3, [r2]
 102              	.LBB3:
  65:./Src/main.c  **** 
  66:./Src/main.c  **** 		for (int i = 0; i < 1000000; i++)
ARM GAS  C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s 			page 4


 103              		.loc 1 66 12
 104 0060 0023     		movs	r3, #0
 105 0062 3B60     		str	r3, [r7]
 106              		.loc 1 66 3
 107 0064 02E0     		b	.L4
 108              	.L5:
 109              		.loc 1 66 33 discriminator 3
 110 0066 3B68     		ldr	r3, [r7]
 111 0068 0133     		adds	r3, r3, #1
 112 006a 3B60     		str	r3, [r7]
 113              	.L4:
 114              		.loc 1 66 3 discriminator 1
 115 006c 3B68     		ldr	r3, [r7]
 116 006e 064A     		ldr	r2, .L7+16
 117 0070 9342     		cmp	r3, r2
 118 0072 F8DD     		ble	.L5
 119              	.LBE3:
  58:./Src/main.c  **** 
 120              		.loc 1 58 13
 121 0074 DEE7     		b	.L6
 122              	.L8:
 123 0076 00BF     		.align	2
 124              	.L7:
 125 0078 00000000 		.word	.LC0
 126 007c 14100240 		.word	1073877012
 127 0080 00040048 		.word	1207960576
 128 0084 14040048 		.word	1207960596
 129 0088 3F420F00 		.word	999999
 130              		.cfi_endproc
 131              	.LFE3:
 133              		.text
 134              	.Letext0:
 135              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 136              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
ARM GAS  C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s:20     .rodata:00000000 $d
C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s:24     .text.main:00000000 $t
C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s:30     .text.main:00000000 main
C:\Users\chian\AppData\Local\Temp\ccRfgCGU.s:125    .text.main:00000078 $d

UNDEFINED SYMBOLS
MYUSART_Init
puts
