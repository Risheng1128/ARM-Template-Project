ARM GAS  C:\Users\User\AppData\Local\Temp\ccfBamh6.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 436F6E6E 		.ascii	"Connect successful\000"
  22      65637420 
  22      73756363 
  22      65737366 
  22      756C00
  23 0013 00       		.align	2
  24              	.LC1:
  25 0014 4C454420 		.ascii	"LED ON\000"
  25      4F4E00
  26 001b 00       		.align	2
  27              	.LC2:
  28 001c 4C454420 		.ascii	"LED OFF\000"
  28      4F464600 
  29              		.section	.text.main,"ax",%progbits
  30              		.align	1
  31              		.global	main
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  36              	main:
  37              	.LFB3:
  38              		.file 1 "./Src/main.c"
   1:./Src/main.c  **** /**
   2:./Src/main.c  ****  ******************************************************************************
   3:./Src/main.c  ****  * @file    main.c
   4:./Src/main.c  ****  * @author  Kuan-Di Jiang
   5:./Src/main.c  ****  * @brief   This file is a example
   6:./Src/main.c  ****  ******************************************************************************
   7:./Src/main.c  ****  */
   8:./Src/main.c  **** 
   9:./Src/main.c  **** #include "myusart.h"
  10:./Src/main.c  **** #include <stdio.h>
  11:./Src/main.c  **** #include <stdint.h>
  12:./Src/main.c  **** 
  13:./Src/main.c  **** /* original setting
  14:./Src/main.c  ****  * uint32_t *pClkCtrlreg = (uint32_t)0x40021014U; // p clock control register
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfBamh6.s 			page 2


  15:./Src/main.c  ****  * uint32_t *pPortModeReg = (uint32_t)0x48000400U;
  16:./Src/main.c  ****  * uint32_t *pPortOutReg = (uint32_t)0x48000414U;
  17:./Src/main.c  ****  */
  18:./Src/main.c  **** // using define to make code clean
  19:./Src/main.c  **** #define RCC_AHBENR *(volatile uint32_t *)(0x40021014U)	// AHB peripheral clock enable register, 0x4
  20:./Src/main.c  **** #define GPIOB_MODER *(volatile uint32_t *)(0x48000400U) // GPIOB base address(0x48000400) + 0x00(of
  21:./Src/main.c  **** #define GPIOC_MODER *(volatile uint32_t *)(0x48000800U) // GPIOC base address(0x48000000) + 0x00(of
  22:./Src/main.c  **** #define GPIOB_ODR *(volatile uint32_t *)(0x48000414U)	// GPIOB base address + 0x14(offset)
  23:./Src/main.c  **** #define GPIOC_IDR *(volatile uint32_t *)(0x48000810U)	// GPIOC base address + 0x10(offset)
  24:./Src/main.c  **** 
  25:./Src/main.c  **** int main(void)
  26:./Src/main.c  **** {
  39              		.loc 1 26 1
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 8
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 80B5     		push	{r7, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 82B0     		sub	sp, sp, #8
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 16
  51 0004 00AF     		add	r7, sp, #0
  52              	.LCFI2:
  53              		.cfi_def_cfa_register 7
  27:./Src/main.c  **** 	MYUSART_Init();
  54              		.loc 1 27 2
  55 0006 FFF7FEFF 		bl	MYUSART_Init
  28:./Src/main.c  **** 	printf("Connect successful\n"); // needed slash n
  56              		.loc 1 28 2
  57 000a 1F48     		ldr	r0, .L5
  58 000c FFF7FEFF 		bl	puts
  29:./Src/main.c  **** 	/** Control LED
  30:./Src/main.c  **** 	 *	Address of the clock control register (AHB2)
  31:./Src/main.c  **** 	 *  0x40021000(RCC base address) + 0x14(offset)
  32:./Src/main.c  **** 	 *  = 0x40021014
  33:./Src/main.c  **** 	 *  Address of the GPIOB mode register (used to control mode)
  34:./Src/main.c  **** 	 *  0x48000400(GPIOB base address) + 0x00(offset)
  35:./Src/main.c  **** 	 *  0x48000400
  36:./Src/main.c  **** 	 *
  37:./Src/main.c  **** 	 * Address of the GPIOB output data register (used to write)
  38:./Src/main.c  **** 	 * 0x48000400(GPIOB base address) + 0x14(offset)
  39:./Src/main.c  **** 	 * 0x48000414
  40:./Src/main.c  **** 	 *
  41:./Src/main.c  **** 	 */
  42:./Src/main.c  **** 	// select uint32_t because all peripheral register are of 32 bits.
  43:./Src/main.c  **** 
  44:./Src/main.c  **** 	// 1. enable the clock for GPIOB and GPIOA peripheral in the AHB2
  45:./Src/main.c  **** 	RCC_AHBENR |= (1 << 18); // means	0x00040000U, set IOPB EN to 1(datasheet)
  59              		.loc 1 45 13
  60 0010 1E4B     		ldr	r3, .L5+4
  61 0012 1B68     		ldr	r3, [r3]
  62 0014 1D4A     		ldr	r2, .L5+4
  63 0016 43F48023 		orr	r3, r3, #262144
  64 001a 1360     		str	r3, [r2]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfBamh6.s 			page 3


  46:./Src/main.c  **** 	RCC_AHBENR |= (1 << 19); // Open IOPC(Set IOPC EN to 1)
  65              		.loc 1 46 13
  66 001c 1B4B     		ldr	r3, .L5+4
  67 001e 1B68     		ldr	r3, [r3]
  68 0020 1A4A     		ldr	r2, .L5+4
  69 0022 43F40023 		orr	r3, r3, #524288
  70 0026 1360     		str	r3, [r2]
  47:./Src/main.c  **** 	// 2. configure the mode of the IO pin as output
  48:./Src/main.c  **** 	// Configuring PA0 as input, because we are reading data from it.
  49:./Src/main.c  **** 	// The LED is on pin7 -> confirm 14th -> 1, 15th -> 0
  50:./Src/main.c  **** 	// a. clear the 14th and 15th bit positions (CLEAR)
  51:./Src/main.c  **** 	GPIOB_MODER &= ~(3 << 14); // means 0xFFFF3FFFU, set 14th and 15th to 0 (datasheet)
  71              		.loc 1 51 14
  72 0028 194B     		ldr	r3, .L5+8
  73 002a 1B68     		ldr	r3, [r3]
  74 002c 184A     		ldr	r2, .L5+8
  75 002e 23F44043 		bic	r3, r3, #49152
  76 0032 1360     		str	r3, [r2]
  52:./Src/main.c  **** 							   // 3 means 11 in binary
  53:./Src/main.c  **** 							   // also can write ~(1 << 14) & ~(1 << 15)
  54:./Src/main.c  **** 	// b make 14th bit position as 1 (SET)
  55:./Src/main.c  **** 	GPIOB_MODER |= (1 << 14); // means 0x00004000U, set 14th to 1 (datasheet)
  77              		.loc 1 55 14
  78 0034 164B     		ldr	r3, .L5+8
  79 0036 1B68     		ldr	r3, [r3]
  80 0038 154A     		ldr	r2, .L5+8
  81 003a 43F48043 		orr	r3, r3, #16384
  82 003e 1360     		str	r3, [r2]
  56:./Src/main.c  **** 
  57:./Src/main.c  **** 	GPIOC_MODER &= ~(3 << 13); // set MODER0 to 00 (input mode)
  83              		.loc 1 57 14
  84 0040 144B     		ldr	r3, .L5+12
  85 0042 1B68     		ldr	r3, [r3]
  86 0044 134A     		ldr	r2, .L5+12
  87 0046 23F4C043 		bic	r3, r3, #24576
  88 004a 1360     		str	r3, [r2]
  89              	.L4:
  90              	.LBB2:
  58:./Src/main.c  **** 
  59:./Src/main.c  **** 	while (1) { 
  60:./Src/main.c  **** 		// read datasheet and find out that GPIO only has 0~15th position, from 16th to 31th is reserved(
  61:./Src/main.c  **** 		uint16_t pinStatus = (uint16_t)GPIOC_IDR & (1 << 13); // bt_press -> 2000, 0010 0000 0000 0000
  91              		.loc 1 61 34
  92 004c 124B     		ldr	r3, .L5+16
  93 004e 1B68     		ldr	r3, [r3]
  94              		.loc 1 61 44
  95 0050 9BB2     		uxth	r3, r3
  96              		.loc 1 61 12
  97 0052 03F40053 		and	r3, r3, #8192
  98 0056 FB80     		strh	r3, [r7, #6]	@ movhi
  62:./Src/main.c  **** 		if (pinStatus) {
  99              		.loc 1 62 6
 100 0058 FB88     		ldrh	r3, [r7, #6]
 101 005a 002B     		cmp	r3, #0
 102 005c 09D0     		beq	.L2
  63:./Src/main.c  **** 			// 3. SET 7th bit of the output data register to make I/O pin-7 HIGH
  64:./Src/main.c  **** 			GPIOB_ODR |= (1 << 7); // means 0x0080
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfBamh6.s 			page 4


 103              		.loc 1 64 14
 104 005e 0F4B     		ldr	r3, .L5+20
 105 0060 1B68     		ldr	r3, [r3]
 106 0062 0E4A     		ldr	r2, .L5+20
 107 0064 43F08003 		orr	r3, r3, #128
 108 0068 1360     		str	r3, [r2]
  65:./Src/main.c  **** 			printf("LED ON\n");
 109              		.loc 1 65 4
 110 006a 0D48     		ldr	r0, .L5+24
 111 006c FFF7FEFF 		bl	puts
 112 0070 ECE7     		b	.L4
 113              	.L2:
  66:./Src/main.c  **** 		} else {
  67:./Src/main.c  **** 			// Turn the Led off
  68:./Src/main.c  **** 			GPIOB_ODR &= ~(1 << 7); // set the postion to 0
 114              		.loc 1 68 14
 115 0072 0A4B     		ldr	r3, .L5+20
 116 0074 1B68     		ldr	r3, [r3]
 117 0076 094A     		ldr	r2, .L5+20
 118 0078 23F08003 		bic	r3, r3, #128
 119 007c 1360     		str	r3, [r2]
  69:./Src/main.c  **** 			printf("LED OFF\n");
 120              		.loc 1 69 4
 121 007e 0948     		ldr	r0, .L5+28
 122 0080 FFF7FEFF 		bl	puts
 123              	.LBE2:
  59:./Src/main.c  **** 		// read datasheet and find out that GPIO only has 0~15th position, from 16th to 31th is reserved(
 124              		.loc 1 59 12
 125 0084 E2E7     		b	.L4
 126              	.L6:
 127 0086 00BF     		.align	2
 128              	.L5:
 129 0088 00000000 		.word	.LC0
 130 008c 14100240 		.word	1073877012
 131 0090 00040048 		.word	1207960576
 132 0094 00080048 		.word	1207961600
 133 0098 10080048 		.word	1207961616
 134 009c 14040048 		.word	1207960596
 135 00a0 14000000 		.word	.LC1
 136 00a4 1C000000 		.word	.LC2
 137              		.cfi_endproc
 138              	.LFE3:
 140              		.text
 141              	.Letext0:
 142              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 143              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfBamh6.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccfBamh6.s:20     .rodata:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfBamh6.s:30     .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfBamh6.s:36     .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccfBamh6.s:129    .text.main:00000088 $d

UNDEFINED SYMBOLS
MYUSART_Init
puts
